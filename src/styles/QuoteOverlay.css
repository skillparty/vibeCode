/* QuoteOverlay Component Styles with Enhanced Glassmorphism */

.quote-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-overlay);
  pointer-events: none;
  padding: var(--space-lg);
  
  /* Smooth transitions */
  transition: opacity var(--transition-base), transform var(--transition-base);
}

.quote-container {
  max-width: min(85%, 800px);
  width: fit-content;
  text-align: center;
  border-radius: var(--radius-xl);
  padding: var(--space-2xl) var(--space-2xl);
  position: relative;
  overflow: hidden;
  
  /* Enhanced glassmorphism effect */
  background: var(--glass-bg);
  backdrop-filter: var(--glass-blur);
  -webkit-backdrop-filter: var(--glass-blur);
  border: 1px solid var(--glass-border);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 0 0 1px var(--border-color),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  
  /* Performance optimizations */
  contain: layout style;
  will-change: opacity, transform;
  transform: translateZ(0);
}

.quote-background-pattern {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0.05;
  background-size: 20px 20px;
  pointer-events: none;
}

.quote-text {
  font-size: clamp(var(--font-size-lg), 4vw, var(--font-size-2xl));
  line-height: 1.6;
  margin-bottom: var(--space-xl);
  font-weight: 400;
  position: relative;
  z-index: 1;
  quotes: '"' '"';
  color: var(--text-primary);
  text-shadow: 0 0 10px var(--glow-color), 0 2px 4px rgba(0, 0, 0, 0.5);
  
  /* Typography enhancements */
  letter-spacing: 0.02em;
  word-spacing: 0.1em;
}

.quote-text::before {
  content: open-quote;
  font-size: 1.5em;
  line-height: 0;
  vertical-align: -0.4em;
  color: var(--accent-color);
  opacity: 0.7;
}

.quote-text::after {
  content: close-quote;
  font-size: 1.5em;
  line-height: 0;
  vertical-align: -0.4em;
  color: var(--accent-color);
  opacity: 0.7;
}

.quote-footer {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-md);
}

.quote-author {
  font-style: italic;
  font-weight: 300;
  font-size: clamp(var(--font-size-sm), 2.5vw, var(--font-size-lg));
  color: var(--text-secondary);
  text-shadow: 0 0 8px var(--glow-color), 0 1px 2px rgba(0, 0, 0, 0.5);
  margin: 0;
  
  /* Author styling */
  position: relative;
}

.quote-author::before {
  content: 'â€” ';
  color: var(--accent-color);
  opacity: 0.8;
}

.quote-metadata {
  font-size: var(--font-size-xs);
  opacity: 0.8;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--space-lg);
  flex-wrap: wrap;
  color: var(--text-tertiary);
  font-family: var(--font-mono);
}

.quote-metadata-item {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  padding: var(--space-xs) var(--space-sm);
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--radius-sm);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.quote-metadata-icon {
  font-size: 0.9em;
  opacity: 0.7;
}

/* Theme-specific styles using CSS custom properties */
.quote-overlay[data-theme="matrix"] .quote-background-pattern {
  background-image: 
    radial-gradient(circle at 25% 25%, var(--primary-color) 1px, transparent 1px),
    radial-gradient(circle at 75% 75%, var(--secondary-color) 1px, transparent 1px);
}

.quote-overlay[data-theme="terminal"] .quote-background-pattern {
  background-image: 
    linear-gradient(90deg, var(--primary-color) 1px, transparent 1px),
    linear-gradient(0deg, var(--primary-color) 1px, transparent 1px);
  background-size: 20px 20px;
}

.quote-overlay[data-theme="retro"] .quote-background-pattern {
  background-image: 
    repeating-linear-gradient(
      45deg,
      var(--primary-color) 0px,
      var(--primary-color) 1px,
      transparent 1px,
      transparent 20px
    );
}

.quote-overlay[data-theme="blue"] .quote-background-pattern {
  background-image: 
    radial-gradient(circle at 50% 50%, var(--primary-color) 2px, transparent 2px);
  background-size: 30px 30px;
}

/* Enhanced transition effects with CSS keyframes */
.quote-overlay {
  transition: opacity var(--transition-base), transform var(--transition-base);
}

/* Fade transition */
.quote-overlay.transition-fade.fade-out {
  opacity: 0;
  transform: scale(0.95);
}

.quote-overlay.transition-fade.fade-in {
  opacity: 1;
  transform: scale(1);
  animation: fadeInScale var(--transition-base) ease-out;
}

/* Slide transition */
.quote-overlay.transition-slide.fade-out {
  opacity: 0;
  transform: translateY(-30px);
}

.quote-overlay.transition-slide.fade-in {
  opacity: 1;
  transform: translateY(0);
  animation: slideInUp var(--transition-base) ease-out;
}

/* Typewriter transition */
.quote-overlay.transition-typewriter.fade-out {
  opacity: 0;
}

.quote-overlay.transition-typewriter.fade-in {
  opacity: 1;
  animation: typewriterIn 1s ease-out;
}

.quote-overlay.transition-typewriter .quote-text {
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 2s steps(40, end);
}

/* 3D rotate transition */
.quote-overlay.transition-rotate3d.fade-out {
  opacity: 0;
  transform: perspective(1000px) rotateY(90deg);
}

.quote-overlay.transition-rotate3d.fade-in {
  opacity: 1;
  transform: perspective(1000px) rotateY(0deg);
  animation: rotate3DIn var(--transition-slow) ease-out;
}

/* Morph transition */
.quote-overlay.transition-morph.fade-out {
  opacity: 0;
  transform: scale(0.8) rotate(5deg) skewX(10deg);
  filter: blur(5px);
}

.quote-overlay.transition-morph.fade-in {
  opacity: 1;
  transform: scale(1) rotate(0deg) skewX(0deg);
  filter: blur(0px);
  animation: morphIn var(--transition-slow) ease-out;
}

/* Keyframe animations */
@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes typewriterIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes rotate3DIn {
  from {
    opacity: 0;
    transform: perspective(1000px) rotateY(90deg);
  }
  to {
    opacity: 1;
    transform: perspective(1000px) rotateY(0deg);
  }
}

@keyframes morphIn {
  from {
    opacity: 0;
    transform: scale(0.8) rotate(5deg) skewX(10deg);
    filter: blur(5px);
  }
  to {
    opacity: 1;
    transform: scale(1) rotate(0deg) skewX(0deg);
    filter: blur(0px);
  }
}

/* Mobile-first responsive design */
@media (max-width: 1024px) {
  .quote-container {
    max-width: 90%;
    padding: var(--space-xl) var(--space-xl);
  }
}

@media (max-width: 768px) {
  .quote-overlay {
    padding: var(--space-md);
  }
  
  .quote-container {
    max-width: 95%;
    padding: var(--space-lg) var(--space-xl);
    border-radius: var(--radius-lg);
  }
  
  .quote-text {
    margin-bottom: var(--space-lg);
    line-height: 1.5;
  }
  
  .quote-metadata {
    gap: var(--space-md);
    font-size: calc(var(--font-size-xs) * 0.9);
  }
  
  .quote-metadata-item {
    padding: calc(var(--space-xs) * 0.8) var(--space-sm);
  }
}

@media (max-width: 480px) {
  .quote-overlay {
    padding: var(--space-sm);
  }
  
  .quote-container {
    max-width: 98%;
    padding: var(--space-md) var(--space-lg);
    border-radius: var(--radius-md);
  }
  
  .quote-text {
    margin-bottom: var(--space-md);
    line-height: 1.4;
  }
  
  .quote-footer {
    gap: var(--space-sm);
  }
  
  .quote-metadata {
    flex-direction: column;
    gap: var(--space-sm);
    align-items: center;
  }
  
  .quote-metadata-item {
    font-size: calc(var(--font-size-xs) * 0.8);
  }
}

/* Landscape orientation on mobile */
@media (max-height: 500px) and (orientation: landscape) {
  .quote-container {
    max-width: 80%;
    max-height: 80vh;
    padding: var(--space-md) var(--space-lg);
    overflow-y: auto;
  }
  
  .quote-text {
    font-size: clamp(var(--font-size-base), 3vw, var(--font-size-lg));
    margin-bottom: var(--space-md);
  }
  
  .quote-metadata {
    display: none; /* Hide metadata in landscape to save space */
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .quote-overlay,
  .quote-overlay * {
    transition: opacity var(--transition-fast) !important;
    animation: none !important;
  }
  
  .quote-overlay.transition-typewriter .quote-text {
    overflow: visible;
    white-space: normal;
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .quote-container {
    border-width: 2px;
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
    background: var(--background-color) !important;
    box-shadow: none;
  }
  
  .quote-text,
  .quote-author {
    text-shadow: none !important;
  }
  
  .quote-metadata-item {
    background: transparent;
    border-width: 2px;
  }
}

/* Print styles */
@media print {
  .quote-overlay {
    position: static;
    background: white;
    color: black;
    padding: var(--space-lg);
  }
  
  .quote-container {
    background: white;
    border: 2px solid black;
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
    box-shadow: none;
    max-width: 100%;
  }
  
  .quote-text,
  .quote-author {
    color: black;
    text-shadow: none;
  }
  
  .quote-background-pattern {
    display: none;
  }
  
  .quote-metadata {
    color: #666;
  }
}

/* Dark mode preference */
@media (prefers-color-scheme: dark) {
  .quote-overlay:not([data-theme]) .quote-container {
    background: rgba(0, 0, 0, 0.9);
    border-color: rgba(255, 255, 255, 0.2);
  }
}

/* Light mode preference */
@media (prefers-color-scheme: light) {
  .quote-overlay:not([data-theme]) .quote-container {
    background: rgba(255, 255, 255, 0.9);
    border-color: rgba(0, 0, 0, 0.2);
    color: #333;
  }
  
  .quote-overlay:not([data-theme]) .quote-text,
  .quote-overlay:not([data-theme]) .quote-author {
    color: #333;
    text-shadow: none;
  }
}